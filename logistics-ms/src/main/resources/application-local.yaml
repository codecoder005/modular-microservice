spring:
  cloud:
    openfeign:
      client:
        refresh-enabled: true
        config:
          json-placeholder-client:
            connectTimeout: 2000   # ms
            readTimeout: 5000      # ms
            loggerLevel: FULL      # NONE, BASIC, HEADERS, FULL
          nano-service-client:
            connectTimeout: 2000   # ms
            readTimeout: 5000      # ms
            loggerLevel: FULL      # NONE, BASIC, HEADERS, FULL
  jpa:
    open-in-view: false
    generate-ddl: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
    database: default
    show-sql: true
    hibernate:
      ddl-auto: create
  datasource:
    generate-unique-name: false
    url: jdbc:h2:mem:a2zdb?DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: sa
    hikari:
      pool-name: UsersMSHikariPool
      register-mbeans: true
      maximum-pool-size: 64 # Tuned based on DB server cores
      minimum-idle: 32     # Half of max pool size for a balance
      connection-timeout: 5000 # Shorten to fail fast (5 seconds)
      idle-timeout: 600000   # 10 minutes
      max-lifetime: 1770000  # A little shorter than default, to avoid network issues (29.5 minutes)
      leak-detection-threshold: 30000 # 30 seconds

      # Additional production-grade properties
      validation-timeout: 5000   # Timeout for connection validation (5 seconds)
      connection-test-query: "SELECT 1" # A lightweight query to validate connections
      auto-commit: false # Crucial for transaction management
      read-only: false # Default, but good to be explicit
      isolate-internal-queries: true # A performance optimization
      # Optional logging/monitoring properties
      health-check-properties:
        health-check-period: 30000 # Check pool health every 30 seconds
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true

## Spring Boot actuator endpoints
management:
  endpoint:
    health:
      show-components: always
      show-details: always
      access: unrestricted
    circuitbreakers:
      enabled: true
    metrics:
      access: unrestricted
    prometheus:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    circuitbreakers:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    enabled: true
    propagation:
      type: w3c
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces
      export:
        enabled: true


logging:
  level:
    org:
      springframework:
        web:
          filter:
            CommonsRequestLoggingFilter: DEBUG
server:
  port: 8081
  servlet:
    context-path: /logistics-ms